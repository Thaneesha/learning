{	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Create EC2 instances",
	"Parameters":
	{
		"InstanceType": 
		{
			"Description" : "Specify an InstanceType (size)",
			"Type" : "String",
			"Default" : "t2.medium",
			 "AllowedValues": [
				"t2.micro",
				"t2.small",
				"t2.medium",
				"m1.small",
				"m1.medium",
				"m1.large",
				"m1.xlarge",
				"m2.xlarge",
				"m2.2xlarge",
				"m2.4xlarge",
				"m3.medium",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"c1.medium",
				"c1.xlarge",
				"c3.large",
				"c3.xlarge",
				"c3.2xlarge",
				"c3.4xlarge",
				"c3.8xlarge",
				"g2.2xlarge",
				"r3.large",
				"r3.xlarge",
				"r3.2xlarge",
				"r3.4xlarge",
				"r3.8xlarge",
				"i2.xlarge",
				"i2.2xlarge",
				"i2.4xlarge",
				"i2.8xlarge",
				"hi1.4xlarge",
				"hs1.8xlarge",
				"cr1.8xlarge",
				"cc2.8xlarge",
				"t2.nano",
				"t1.micro"],
				"ConstraintDescription": "Must be a valid EC2 InstanceType"
			},
		"SSHLocation": 
		{
			  "Description": "The IP address range that can be used to SSH to the EC2 instances",
			  "Type": "String",
			  "MinLength": "9",
			  "MaxLength": "18",
			  "Default": "0.0.0.0/0",
			  "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			  "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		},

		"DBName" : 
		{
			  "Default": "wordpressdb",
			  "Description" : "The WordPress database name",
			  "Type": "String",
			  "MinLength": "1",
			  "MaxLength": "64",
			  "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
			  "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
		},

		"DBUser" : 
		{
			  "Default": "test",
			  "NoEcho": "true",
			  "Description" : "The WordPress database admin account username",
			  "Type": "String",
			  "MinLength": "1",
			  "MaxLength": "16",
			  "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
			  "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
		},

		"DBPassword" : 
		{
			  "Default": "test1234",
			  "NoEcho": "true",
			  "Description" : "The WordPress database admin account password",
			  "Type": "String",
			  "MinLength": "8",
			  "MaxLength": "41",
			  "AllowedPattern" : "[a-zA-Z0-9]*",
			  "ConstraintDescription" : "must contain only alphanumeric characters."
		},

		"DBRootPassword" : 
		{
			  "Default": "test1234",
			  "NoEcho": "true",
			  "Description" : "MySQL root password",
			  "Type": "String",
			  "MinLength": "8",
			  "MaxLength": "41",
			  "AllowedPattern" : "[a-zA-Z0-9]*",
			  "ConstraintDescription" : "must contain only alphanumeric characters."
		},
		"KeyPairIdentifier": 
		{
			"Description": "Please provide the key Pair that should be used to launch the EC2 instance",
			"Type": "String",
			"Default" : "TASK1TRAINING_EC2",
			"ConstraintDescription": "It must be the name of an existing EC2 KeyPair."
		},
		"VPCIdentifier": 
		{
			"Description": "Please provide the VPC that should be used to launch the EC2 instance",
			"Type": "AWS::EC2::VPC::Id",
			"Default" : "vpc-42200f2a"
		},
		"SecurityGroup1FE": 
		{
			"Description": "Please Provide Security Group To be attached to the Instance",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"Default" : "sg-185c0072"
		},
		"SecurityGroup2COMPUT": 
		{
			"Description": "Please Provide Security Group To be attached to the Instance",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"Default" : "sg-185c0072"
		},
		"PUB1SUBNETFE": 
		{
			"Description": "Please Provide The Subnet where the Insance Should Be launched",
			"Type": "AWS::EC2::Subnet::Id",
			"Default" : "subnet-66cf9e0e"	
		},
		"PUB2SUBNETFE": 
		{
			"Description": "Please Provide The Subnet where the Insance Should Be launched",
			"Type": "AWS::EC2::Subnet::Id",
			"Default" : "subnet-e5fc729f"
		},
		"PVT1SUBNETCOMPUT": 
		{
			"Description": "Please Provide The Subnet where the Insance Should Be launched",
			"Type": "AWS::EC2::Subnet::Id",
			"Default" : "subnet-4fce9f27"
		},
		"PVT2SUBNETCOMPUT": 
		{
			"Description": "Please Provide The Subnet where the Insance Should Be launched",
			"Type": "AWS::EC2::Subnet::Id",
			"Default" : "subnet-64f0a10c"
		},
		"NameCOMPUT1":
		{
			"Description": "This tag specifies the name of EC2 instance",
			"Type": "String",
			"Default" : "TASK1EC2COMPUTE1"
		},
		"NameCOMPUT2":
		{
			"Description": "This tag specifies the name of EC2 instance",
			"Type": "String",
			"Default" : "TASK1EC2COMPUTE2"
		},
		"NameWP1":
		{
			"Description": "This tag specifies the name of EC2 instance",
			"Type": "String",
			"Default" : "TASK1WP1"
		},
		"NameWP2":
		{
			"Description": "This tag specifies the name of EC2 instance",
			"Type": "String",
			"Default" : "TASK1WP2"
		}
	},

  "Mappings" : 
    {
		"AWSInstanceType2Arch" : 
		{
			  "t1.micro"    : { "Arch" : "PV64"   },
			  "t2.nano"     : { "Arch" : "HVM64"  },
			  "t2.micro"    : { "Arch" : "HVM64"  },
			  "t2.small"    : { "Arch" : "HVM64"  },
			  "t2.medium"   : { "Arch" : "HVM64"  },
			  "t2.large"    : { "Arch" : "HVM64"  },
			  "m1.small"    : { "Arch" : "PV64"   },
			  "m1.medium"   : { "Arch" : "PV64"   },
			  "m1.large"    : { "Arch" : "PV64"   },
			  "m1.xlarge"   : { "Arch" : "PV64"   },
			  "m2.xlarge"   : { "Arch" : "PV64"   },
			  "m2.2xlarge"  : { "Arch" : "PV64"   },
			  "m2.4xlarge"  : { "Arch" : "PV64"   },
			  "m3.medium"   : { "Arch" : "HVM64"  },
			  "m3.large"    : { "Arch" : "HVM64"  },
			  "m3.xlarge"   : { "Arch" : "HVM64"  },
			  "m3.2xlarge"  : { "Arch" : "HVM64"  },
			  "m4.large"    : { "Arch" : "HVM64"  },
			  "m4.xlarge"   : { "Arch" : "HVM64"  },
			  "m4.2xlarge"  : { "Arch" : "HVM64"  },
			  "m4.4xlarge"  : { "Arch" : "HVM64"  },
			  "m4.10xlarge" : { "Arch" : "HVM64"  },
			  "c1.medium"   : { "Arch" : "PV64"   },
			  "c1.xlarge"   : { "Arch" : "PV64"   },
			  "c3.large"    : { "Arch" : "HVM64"  },
			  "c3.xlarge"   : { "Arch" : "HVM64"  },
			  "c3.2xlarge"  : { "Arch" : "HVM64"  },
			  "c3.4xlarge"  : { "Arch" : "HVM64"  },
			  "c3.8xlarge"  : { "Arch" : "HVM64"  },
			  "c4.large"    : { "Arch" : "HVM64"  },
			  "c4.xlarge"   : { "Arch" : "HVM64"  },
			  "c4.2xlarge"  : { "Arch" : "HVM64"  },
			  "c4.4xlarge"  : { "Arch" : "HVM64"  },
			  "c4.8xlarge"  : { "Arch" : "HVM64"  },
			  "g2.2xlarge"  : { "Arch" : "HVMG2"  },
			  "g2.8xlarge"  : { "Arch" : "HVMG2"  },
			  "r3.large"    : { "Arch" : "HVM64"  },
			  "r3.xlarge"   : { "Arch" : "HVM64"  },
			  "r3.2xlarge"  : { "Arch" : "HVM64"  },
			  "r3.4xlarge"  : { "Arch" : "HVM64"  },
			  "r3.8xlarge"  : { "Arch" : "HVM64"  },
			  "i2.xlarge"   : { "Arch" : "HVM64"  },
			  "i2.2xlarge"  : { "Arch" : "HVM64"  },
			  "i2.4xlarge"  : { "Arch" : "HVM64"  },
			  "i2.8xlarge"  : { "Arch" : "HVM64"  },
			  "d2.xlarge"   : { "Arch" : "HVM64"  },
			  "d2.2xlarge"  : { "Arch" : "HVM64"  },
			  "d2.4xlarge"  : { "Arch" : "HVM64"  },
			  "d2.8xlarge"  : { "Arch" : "HVM64"  },
			  "hi1.4xlarge" : { "Arch" : "HVM64"  },
			  "hs1.8xlarge" : { "Arch" : "HVM64"  },
			  "cr1.8xlarge" : { "Arch" : "HVM64"  },
			  "cc2.8xlarge" : { "Arch" : "HVM64"  }
		},
		"AWSInstanceType2NATArch" : 
		{
			  "t1.micro"    : { "Arch" : "NATPV64"   },
			  "t2.nano"     : { "Arch" : "NATHVM64"  },
			  "t2.micro"    : { "Arch" : "NATHVM64"  },
			  "t2.small"    : { "Arch" : "NATHVM64"  },
			  "t2.medium"   : { "Arch" : "NATHVM64"  },
			  "t2.large"    : { "Arch" : "NATHVM64"  },
			  "m1.small"    : { "Arch" : "NATPV64"   },
			  "m1.medium"   : { "Arch" : "NATPV64"   },
			  "m1.large"    : { "Arch" : "NATPV64"   },
			  "m1.xlarge"   : { "Arch" : "NATPV64"   },
			  "m2.xlarge"   : { "Arch" : "NATPV64"   },
			  "m2.2xlarge"  : { "Arch" : "NATPV64"   },
			  "m2.4xlarge"  : { "Arch" : "NATPV64"   },
			  "m3.medium"   : { "Arch" : "NATHVM64"  },
			  "m3.large"    : { "Arch" : "NATHVM64"  },
			  "m3.xlarge"   : { "Arch" : "NATHVM64"  },
			  "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "m4.large"    : { "Arch" : "NATHVM64"  },
			  "m4.xlarge"   : { "Arch" : "NATHVM64"  },
			  "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "m4.10xlarge" : { "Arch" : "NATHVM64"  },
			  "c1.medium"   : { "Arch" : "NATPV64"   },
			  "c1.xlarge"   : { "Arch" : "NATPV64"   },
			  "c3.large"    : { "Arch" : "NATHVM64"  },
			  "c3.xlarge"   : { "Arch" : "NATHVM64"  },
			  "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
			  "c4.large"    : { "Arch" : "NATHVM64"  },
			  "c4.xlarge"   : { "Arch" : "NATHVM64"  },
			  "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
			  "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
			  "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
			  "r3.large"    : { "Arch" : "NATHVM64"  },
			  "r3.xlarge"   : { "Arch" : "NATHVM64"  },
			  "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
			  "i2.xlarge"   : { "Arch" : "NATHVM64"  },
			  "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
			  "d2.xlarge"   : { "Arch" : "NATHVM64"  },
			  "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
			  "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
			  "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
			  "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
			  "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
			  "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
			  "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
			},
		"AWSRegionArch2AMI" : 
		{
			  "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-97785bed", "HVMG2" : "ami-0a6e3770"},
			  "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-f2d3638a", "HVMG2" : "ami-ee15a196"},
			  "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-824c4ee2", "HVMG2" : "ami-0da4a46d"},
			  "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-d834aba1", "HVMG2" : "ami-af8013d6"},
			  "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-403e2524", "HVMG2" : "NOT_SUPPORTED"},
			  "eu-west-3"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-8ee056f3", "HVMG2" : "NOT_SUPPORTED"},
			  "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-5652ce39", "HVMG2" : "ami-1d58ca72"},
			  "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-ceafcba8", "HVMG2" : "ami-edfd658b"},
			  "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-863090e8", "HVMG2" : "NOT_SUPPORTED"},
			  "ap-northeast-3"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-83444afe", "HVMG2" : "NOT_SUPPORTED"},
			  "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-68097514", "HVMG2" : "ami-c06013bc"},
			  "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-942dd1f6", "HVMG2" : "ami-85ef12e7"},
			  "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-531a4c3c", "HVMG2" : "ami-411e492e"},
			  "us-east-2"        : {"PV64" : "ami-8c122be9", "HVM64" : "ami-8c122be9", "HVMG2" : "NOT_SUPPORTED"},
			  "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-a954d1cd", "HVMG2" : "NOT_SUPPORTED"},
			  "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-84175ae8", "HVMG2" : "NOT_SUPPORTED"},
			  "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-cb19c4a6", "HVMG2" : "NOT_SUPPORTED"},
			  "cn-northwest-1"   : {"PV64" : "ami-80707be2", "HVM64" : "ami-3e60745c", "HVMG2" : "NOT_SUPPORTED"}
		},
		"AWSRegion2AZ" : {
            "us-east-1" : { 
				"A" : "us-east-1a",
                "B" : "us-east-1b",
                "C" : "us-east-1c",
                "D" : "us-east-1d",
				"E" : "us-east-1e",
                "F" : "us-east-1f" },
			"us-east-2" : 	{ 
				"A" : "us-east-2a",
                "B" : "us-east-2b",
                "C" : "us-east-2c" },
			"us-west-1" : { 
				"A" : "us-west-1b",
                "B" : "us-west-1c" },
			"us-west-2" : { 
				"A" : "us-west-2a",
                "B" : "us-west-2b",
				"C" : "us-west-2c" },
			"eu-west-1" : { 
				"A" : "eu-west-1a",
				"B" : "eu-west-1b",
				"C" : "eu-west-1c" },
			"eu-central-1" : { 
				"A" : "eu-central-1a",
				"B" : "eu-central-1b" },
			"ap-southeast-1" : { 
				"A" : "ap-southeast-1a",
				"B" : "ap-southeast-1b"},
			"ap-southeast-2" : { 
				"A" : "ap-southeast-2a",
				"B" : "ap-southeast-2b",
				"C" : "ap-southeast-2c"},
			"ap-northeast-1" : { 
				"A" : "ap-northeast-1a",
				"B" : "ap-northeast-1c"},
			"sa-east-1"	 : {
				"A" : "sa-east-1a",
				"B" : "sa-east-1b",
				"C" : "sa-east-1c"}}
	},
  "Metadata":
	{
		"AWS::CloudFormation::Interface": 
		{
			"ParameterGroups" : [{
			"Label" : { "default" : "EC2 Server Configuration" },
			"Parameters" : [ "InstanceSize","KeyPairIdentifier","VPCIdentifier","SecurityGroup1FE","SecurityGroup2COMPUT", 
			"AVIABLITYZONEPVT", "PUB1SUBNETFE", "PVT2SUBNETCOMPUT" ]
			},{"Label" : { "default":"Amazon EC2 Tags" },
			"Parameters" : ["NameFE", "NameCOMPUT1","NameCOMPUT1" ]}]
		}
	},
  "Resources":
	{
	"WebServer": 
		{
			  "Type" : "AWS::EC2::Instance",
			  "Metadata" : 
			{
				"AWS::CloudFormation::Init" : 
			{
				  "configSets" : {
					"wordpress_install" : ["install_cfn", "install_wordpress", "configure_wordpress" ]
				  },
				  "install_cfn" : {
					"files": {
					  "/etc/cfn/cfn-hup.conf": {
						"content": { "Fn::Join": [ "", [
						  "[main]\n",
						  "stack=", { "Ref": "AWS::StackId" }, "\n",
						  "region=", { "Ref": "AWS::Region" }, "\n"
						]]},
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  },
					  "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
						"content": { "Fn::Join": [ "", [
						  "[cfn-auto-reloader-hook]\n",
						  "triggers=post.update\n",
						  "path=Resources.WebServer.Metadata.AWS::CloudFormation::Init\n",
						  "action=/opt/aws/bin/cfn-init -v ",
								  "         --stack ", { "Ref" : "AWS::StackName" },
								  "         --resource WebServer ",
								  "         --configsets wordpress_install ",
								  "         --region ", { "Ref" : "AWS::Region" }, "\n"
						]]},          
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  }
					},
					"services" : {
					  "sysvinit" : {
						"cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
									  "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"] }
					  }
					}
				  },

				  "install_wordpress" : 
				{
					"packages" : {
					  "yum" : {
						"php"          : [],
						"php-mysql"    : [],
						"mysql"        : [],
						"mysql-server" : [],
						"mysql-devel"  : [],
						"mysql-libs"   : [],
						"httpd"        : []
					  }
					},
					"sources" : {
					  "/var/www/html" : "http://wordpress.org/latest.tar.gz"
					},
					"files" : 
					{
					  "/tmp/setup.mysql" : {
						"content" : { "Fn::Join" : ["", [
						  "CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",
						  "CREATE USER '", { "Ref" : "DBUser" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DBPassword" }, "';\n",
						  "GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUser" }, "'@'localhost';\n",
						  "FLUSH PRIVILEGES;\n"
						]]},
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  },

					  "/tmp/create-wp-config" : 
						{
						"content" : { "Fn::Join" : [ "", [
						  "#!/bin/bash -xe\n",
						  "cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php\n",
						  "sed -i \"s/'database_name_here'/'",{ "Ref" : "DBName" }, "'/g\" wp-config.php\n",
						  "sed -i \"s/'username_here'/'",{ "Ref" : "DBUser" }, "'/g\" wp-config.php\n",
						  "sed -i \"s/'password_here'/'",{ "Ref" : "DBPassword" }, "'/g\" wp-config.php\n"
						]]},
						"mode" : "000500",
						"owner" : "root",
						"group" : "root"
						}
					},
					"services" : {
					  "sysvinit" : {
						"httpd"  : { "enabled" : "true", "ensureRunning" : "true" },
						"mysqld" : { "enabled" : "true", "ensureRunning" : "true" }
					  }
					}
				},

				  "configure_wordpress" : 
				{
					"commands" : 
					{
					  "01_set_mysql_root_password" : {
						"command" : { "Fn::Join" : ["", ["mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'"]]},
						"test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, 
						"' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
					  },
					  "02_create_database" : {
						"command" : { "Fn::Join" : ["", ["mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setup.mysql"]]},
						"test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, 
						"' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
					  },
					  "03_configure_wordpress" : {
						"command" : "/tmp/create-wp-config",
						"cwd" : "/var/www/html/wordpress"
					  }
					}
				}
			}
			},
			"Properties": {
			
					"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
									  { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
					"InstanceType"   : { "Ref" : "InstanceType" },
					"SecurityGroupIds" : [ {"Ref" : "SecurityGroup1FE"} ],
					"KeyName"        : { "Ref" : "KeyPairIdentifier" },
					"SubnetId" : {"Ref" : "PUB1SUBNETFE"},
					"Tags": [{"Key": "Name", "Value" : {"Ref": "NameWP1"}}],
					"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
								   "#!/bin/bash -xe\n",
								   "yum update -y aws-cfn-bootstrap\n",

								   "/opt/aws/bin/cfn-init -v ",
								   "         --stack ", { "Ref" : "AWS::StackName" },
								   "         --resource WebServer ",
								   "         --configsets wordpress_install ",
								   "         --region ", { "Ref" : "AWS::Region" }, "\n",

								   "/opt/aws/bin/cfn-signal -e $? ",
								   "         --stack ", { "Ref" : "AWS::StackName" },
								   "         --resource WebServer ",
								   "         --region ", { "Ref" : "AWS::Region" }, "\n"
					]]}}
				  },
					"CreationPolicy" : {
					"ResourceSignal" : {
					"Timeout" : "PT30M"}}
		},
		"WebServer2": 
		{
			  "Type" : "AWS::EC2::Instance",
			  "Metadata" : 
			{
				"AWS::CloudFormation::Init" : 
			{
				  "configSets" : {
					"wordpress_install" : ["install_cfn", "install_wordpress", "configure_wordpress" ]
				  },
				  "install_cfn" : {
					"files": {
					  "/etc/cfn/cfn-hup.conf": {
						"content": { "Fn::Join": [ "", [
						  "[main]\n",
						  "stack=", { "Ref": "AWS::StackId" }, "\n",
						  "region=", { "Ref": "AWS::Region" }, "\n"
						]]},
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  },
					  "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
						"content": { "Fn::Join": [ "", [
						  "[cfn-auto-reloader-hook]\n",
						  "triggers=post.update\n",
						  "path=Resources.WebServer.Metadata.AWS::CloudFormation::Init\n",
						  "action=/opt/aws/bin/cfn-init -v ",
								  "         --stack ", { "Ref" : "AWS::StackName" },
								  "         --resource WebServer ",
								  "         --configsets wordpress_install ",
								  "         --region ", { "Ref" : "AWS::Region" }, "\n"
						]]},          
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  }
					},
					"services" : {
					  "sysvinit" : {
						"cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
									  "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"] }
					  }
					}
				  },

				  "install_wordpress" : 
				{
					"packages" : {
					  "yum" : {
						"php"          : [],
						"php-mysql"    : [],
						"mysql"        : [],
						"mysql-server" : [],
						"mysql-devel"  : [],
						"mysql-libs"   : [],
						"httpd"        : []
					  }
					},
					"sources" : {
					  "/var/www/html" : "http://wordpress.org/latest.tar.gz"
					},
					"files" : 
					{
					  "/tmp/setup.mysql" : {
						"content" : { "Fn::Join" : ["", [
						  "CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",
						  "CREATE USER '", { "Ref" : "DBUser" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DBPassword" }, "';\n",
						  "GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUser" }, "'@'localhost';\n",
						  "FLUSH PRIVILEGES;\n"
						]]},
						"mode"  : "000400",
						"owner" : "root",
						"group" : "root"
					  },

					  "/tmp/create-wp-config" : 
						{
						"content" : { "Fn::Join" : [ "", [
						  "#!/bin/bash -xe\n",
						  "cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php\n",
						  "sed -i \"s/'database_name_here'/'",{ "Ref" : "DBName" }, "'/g\" wp-config.php\n",
						  "sed -i \"s/'username_here'/'",{ "Ref" : "DBUser" }, "'/g\" wp-config.php\n",
						  "sed -i \"s/'password_here'/'",{ "Ref" : "DBPassword" }, "'/g\" wp-config.php\n"
						]]},
						"mode" : "000500",
						"owner" : "root",
						"group" : "root"
						}
					},
					"services" : {
					  "sysvinit" : {
						"httpd"  : { "enabled" : "true", "ensureRunning" : "true" },
						"mysqld" : { "enabled" : "true", "ensureRunning" : "true" }
					  }
					}
				},

				  "configure_wordpress" : 
				{
					"commands" : 
					{
					  "01_set_mysql_root_password" : {
						"command" : { "Fn::Join" : ["", ["mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'"]]},
						"test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, 
						"' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
					  },
					  "02_create_database" : {
						"command" : { "Fn::Join" : ["", ["mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setup.mysql"]]},
						"test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, 
						"' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
					  },
					  "03_configure_wordpress" : {
						"command" : "/tmp/create-wp-config",
						"cwd" : "/var/www/html/wordpress"
					  }
					}
				}
			}
			},
			"Properties": 
			{
					"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, "HVM64" ] },
					"InstanceType"   : { "Ref" : "InstanceType" },
					"SecurityGroupIds" : [ {"Ref" : "SecurityGroup2COMPUT"} ],
					"KeyName"        : { "Ref" : "KeyPairIdentifier" },
					"SubnetId" : {"Ref" : "PUB2SUBNETFE"},
					"Tags": [{"Key": "Name", "Value" : {"Ref": "NameWP2"}}],
					"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
								   "#!/bin/bash -xe\n",
								   "yum update -y aws-cfn-bootstrap\n",

								   "/opt/aws/bin/cfn-init -v ",
								   "         --stack ", { "Ref" : "AWS::StackName" },	
								   "         --resource WebServer ",
								   "         --configsets wordpress_install ",
								   "         --region ", { "Ref" : "AWS::Region" }, "\n",

								   "/opt/aws/bin/cfn-signal -e $? ",
								   "         --stack ", { "Ref" : "AWS::StackName" },
								   "         --resource WebServer ",
								   "         --region ", { "Ref" : "AWS::Region" }, "\n"
					]]}}
			},
					"CreationPolicy" : {
					"ResourceSignal" : {
					"Timeout" : "PT30M"}}
		}
	}
}
